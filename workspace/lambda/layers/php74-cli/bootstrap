#!/opt/bin/php -c/opt/bin/php.ini
<?php

do {
    $request = getNextRequest();

    $tokens = explode($delimiter = '.', $_ENV['_HANDLER']);
    $handlerFunction = array_slice($tokens, $offset = -1)[0];
    $handler = sprintf('%s/src/%s.php', $_ENV['LAMBDA_TASK_ROOT'], $handlerFunction);
    require_once $handler;

    $response = $handlerFunction($request['payload']);

    sendResponse($request['invocationId'], $response);
} while (true);

function getNextRequest(): array
{
    $url = sprintf('http://%s/2018-06-01/runtime/invocation/next', $_ENV['AWS_LAMBDA_RUNTIME_API']);
    $headers = [];

    $curl = curl_init();
    try {
        curl_setopt_array($curl, [
            CURLOPT_URL => $url,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_HEADERFUNCTION => function ($curl, $header) use (&$headers) {
                $length = strlen($header);
                $header = explode($delimiter = ':', $header, $limit = 2);
                if (count($header) < 2) // ignore invalid headers
                    return $length;

                [$key, $value] = array_map('trim', $header);

                $headers[$key][] = $value;

                return $length;
            }
        ]);

        $body = curl_exec($curl);

        return [
            'invocationId' => $headers['Lambda-Runtime-Aws-Request-Id'][0],
            'payload' => json_decode($body, $associative = true)
        ];
    } finally {
        curl_close($curl);
    }
}

function sendResponse($invocationId, $response): void
{
    $url = sprintf('http://%s/2018-06-01/runtime/invocation/%s/response', $_ENV['AWS_LAMBDA_RUNTIME_API'], $invocationId);

    $curl = curl_init();
    try {
        curl_setopt_array($curl, [
            CURLOPT_URL => $url,
            CURLOPT_POST => true,
            CURLOPT_HEADER => [
                'Content-Type: application/json; utf-8',
                'Accept: application/json'
            ],
            CURLOPT_POSTFIELDS => json_encode(['body' => $response]),
        ]);

        curl_exec($curl);
    } finally {
        curl_close($curl);
    }
}
